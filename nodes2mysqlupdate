#!/usr/bin/perl

use strict;
use warnings;
use JSON::Parse 'parse_json';
use Data::Dumper;

my $debug=0;

# Filter for field role
#my $site_filter = "su-lo";
my $site_filter ="";

# Filter for ipv6 address
my $ipv6_filter = "fda0";

# Define indent for output file
my $ind="    ";

# Read JSON data from STDIN
my $content = <>;

# Parse JSON data
my $json_text = parse_json ( $content );
# print Dumper($json_text);

# Structure in nodes.json was changed to v2:
#  'version' => 2,
#          'timestamp' => '2017-04-09T22:53:00.048Z',
#          'nodes' => [

# keep this declaration outside of the eval-block
my $val = "not defined";


# this with error
eval { $val = $json_text->{nodes}->[0]; };
warn "$@\n" if $@;


# check
print "I'm alive and val is: $val \n" if $debug;


# Loop over nodes
foreach my $node (keys @{$json_text->{nodes}})
{
    # hostname
    my $hostname = $json_text->{nodes}->[$node]->{nodeinfo}->{hostname};
    # Initialize array for ipv6 addresses, usually link local fe80:
    # and ff fda0 (the latter we want for the output file):
    my @ips = ();
    # Initialize empty variable for ip address
    my $ip = "";
    # Retrieve the ip address information from JSON, if available
    if (defined $json_text->{nodes}->[$node]->{nodeinfo}->{network}->{addresses})
    {
        @ips = @{$json_text->{nodes}->[$node]->{nodeinfo}->{network}->{addresses}};
        # Search for the fda0 address and put it in varaible $ip
        foreach my $i (0..$#ips)
        {
            $ip = $ips[$i] if $ips[$i] =~ m/^$ipv6_filter/;
        }
    }
    # role
    my $role = $json_text->{nodes}->[$node]->{nodeinfo}->{system}->{role} || "";
    my $sitecode = $json_text->{nodes}->[$node]->{nodeinfo}->{system}->{site_code} || "";
    my $nodeid = $json_text->{nodes}->[$node]->{nodeinfo}->{node_id} || "";
    my $firmware = $json_text->{nodes}->[$node]->{nodeinfo}->{software}->{firmware}->{release} || "";
    my $macaddress = $json_text->{nodes}->[$node]->{nodeinfo}->{network}->{mac}  || "";
    my $contact = $json_text->{nodes}->[$node]->{nodeinfo}->{owner}->{contact} || "";
    my $hardware = $json_text->{nodes}->[$node]->{nodeinfo}->{hardware}->{model} || "";

   # Lets clean up bad strings
   $hostname =~ s/(['"])/\\$1/g;



  if ($debug){
    if ( $sitecode eq $site_filter  )
    {
        print "Host    : ".$hostname."\n";
        print "sitecode: ".$sitecode."\n";
        print "nodeid  : ".$nodeid."\n";
        print "MAC     : ".$macaddress."\n";
        print "IPv6    : ".$ip."\n";
        print "Rolle   : ".$role."\n";
        print "Hardware: ".$hardware."\n";
        print "Firmware: ".$firmware."\n";
        print "Contact : ".$contact."\n";
        print "\n";
    }else{
        print "Host    : ".$hostname."\n";
        print "sitecode: ".$sitecode."\n";
        print "nodeid  : ".$nodeid."\n";
        print "MAC     : ".$macaddress."\n";
        print "IPv6    : ".$ip."\n";
        print "Firmware: ".$firmware."\n";
        print "Rolle   : ".$role."\n";
        print "Hardware: ".$hardware."\n";
        print "Contact : ".$contact."\n";
        print "\n";
        }
   }

# print out mysql statements

#        print "insert into freifunk_nodes set nodeid='".$nodeid."',mac_addr='".$macaddress."',hardware='".$hardware."',hostname='".$hostname."',si
te_code='".$sitecode."',role='".$role."',ipv6int='".$ip."';\n";
          print "update freifunk_nodes set mac_addr='".$macaddress."',hardware='".$hardware."',hostname='".$hostname."',site_code='".$sitecode."',r
ole='".$role."',ipv6int='".$ip."' where nodeid='".$nodeid."';\n";

}
